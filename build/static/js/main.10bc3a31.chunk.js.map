{"version":3,"sources":["Components/globals/notifications.js","Components/globals/navigation.js","Components/detail.list.item.js","Components/detail.list.header.js","Components/detail.list.js","Components/document.panel.js","Components/case.proof.panel.js","Components/add.casemodule.modal.js","Components/case.module.panel.js","Components/inputField.courses.js","Components/detail.content.js","Container/addWindow.js","Components/add.student.modal.js","Container/main.view.js","Components/module.list.item.js","Components/module.list.header.js","Components/module.list.js","Components/module.content.js","Container/addModuleWindow.js","Components/add.module.modal.js","Container/module.overview.js","App.js","serviceWorker.js","index.js"],"names":["Notifications","state","selectedIndex","dropdownOpen","count","render","Dropdown","isOpen","toggle","setState","DropdownToggle","caret","Badge","color","DropdownMenu","right","DropdownItem","header","disabled","divider","Component","Navigation","props","Navbar","light","expand","style","margin","NavbarBrand","href","Nav","className","navbar","NavItem","NavLink","onClick","changeSite","DetailListItem","data","listItemClickHandler","active","ListGroupItem","tag","action","caseFirstName","caseLastName","DetailListHeader","Row","Col","xs","FormGroup","Input","type","name","id","placeholder","Button","this","onAdd","DetailList","ListGroup","length","map","o","idx","key","onChange","DocumentsPanel","antragChecked","gradesChecked","modulChecked","progressValue","getProgressValue","value","toggleAntrag","console","log","togglGrades","toggleModul","CustomInput","label","readOnly","Progress","CaseProofPanel","internChecked","germanyChecked","moreChecked","toggleIntern","toggleGermany","toggleMore","defaultChecked","electron","window","require","AddCaseModuleModal","detail","modules","getModules","module","getAll","handleChange","prop","tempForm","form","handleSubmit","onSubmit","Modal","open","ModalHeader","ModalBody","Label","for","multiple","c","moduleID","moduleName","ModalFooter","DataBaseConnector","remote","CaseModulePanel","moduleModalOpen","addModulesToTable","Table","size","hover","scope","CoursesInput","courses","getCourses","course","e","target","courseID","courseName","DetailContent","Form","padding","caseID","mNumber","email","geschlecht","documentID","AddWindow","AddStudentModal","createDateCase","Date","MainView","cases","tests","addModalOpen","getCases","casesDB","addCase","student","create","editData","caseDB","updateCase","changes","minHeight","DatabaseCase","ModuleListItem","ModuleListHeader","ModuleList","ModuleContent","creditpoints","profName","profEmail","InputGroup","documentsModalOpen","AddModuleWindow","creditPoints","AddModuleModal","addModule","newModule","i","item","j","App","current","Container","fluid","getPage","Boolean","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.10bc3a31.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Badge } from 'reactstrap'\n\n \nexport default class Notifications extends Component {\n\n    state = {\n        selectedIndex: 0,\n        dropdownOpen: false,\n        count: 0\n    };\n\n\n    render = () => {\n        return (\n            <div>\n                <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.setState({ dropdownOpen: !this.state.dropdownOpen }) }>\n                    <DropdownToggle caret>\n                        Erinnerungen <Badge color={this.state.count === 0 ? \"secondary\" : \"danger\"}>{this.state.count}</Badge>\n                    </DropdownToggle>\n                    <DropdownMenu right>\n                        <DropdownItem header>Header</DropdownItem>\n                        <DropdownItem disabled>Action</DropdownItem>\n                        <DropdownItem>Another Action</DropdownItem>\n                        <DropdownItem divider/>\n                        <DropdownItem>Another Really Really Long Action (Really!)</DropdownItem>\n                    </DropdownMenu>\n                </Dropdown>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { Nav, NavLink, Navbar, NavbarBrand, NavItem} from 'reactstrap'\nimport Notifications from './notifications'\n\nconst Navigation = (props) => {\n      \n    return (\n      <div>\n        <Navbar color=\"light\" light expand=\"md\" style={{ margin: '0 -15px' }}>\n          <NavbarBrand href=\"/\">Menü</NavbarBrand>\n            <Nav className=\"mr-auto\" navbar>\n                <NavItem>\n                    <NavLink onClick={() => props.changeSite(0)} className='pointer' >Fallverwaltung</NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink onClick={() => props.changeSite(1)} className='pointer' >Module bearbeiten</NavLink>\n                </NavItem>\n             \n            </Nav>\n            <Notifications />\n          \n        </Navbar>\n\n      </div>\n    );\n  }\n  \n  export default Navigation;\n\n","import React from 'react'\nimport { ListGroupItem } from 'reactstrap'\n\n    const DetailListItem = ({ data, listItemClickHandler, active }) => (\n        <ListGroupItem active={active} tag=\"button\" action onClick={() => listItemClickHandler()}>\n            <span><b>{(data.caseFirstName ? data.caseFirstName : '') + ' ' + (data.caseLastName ? data.caseLastName : '')}</b></span>\n        </ListGroupItem>\n    )\n\n    export default DetailListItem","import React, {Component} from 'react'\nimport { Row, Col, Button, FormGroup, Input } from 'reactstrap';\n\nclass DetailListHeader extends Component {\n\n    render () {\n        return <>\n        <Row>\n            <Col xs={10} >\n                <FormGroup>\n                    <Input\n                    type=\"search\"\n                    name=\"search\"\n                    id=\"exampleSearch\"\n                    placeholder=\"search placeholder\"\n                    />\n                </FormGroup>\n            </Col>\n            <Col className='no-padding' xs={2}><Button color=\"success\" onClick={this.props.onAdd}>+</Button></Col>\n        </Row>\n        </> \n    }\n}\nexport default DetailListHeader\n","import React, {Component} from 'react'\nimport DetailListItem from './detail.list.item'\nimport { ListGroup } from 'reactstrap';\nimport DetailListHeader from './detail.list.header';\n\nclass DetailList extends Component {\n\n    render () {\n        return (\n            <>\n                <DetailListHeader onAdd={this.props.onAdd} />\n                <ListGroup>\n                {this.props.data && this.props.data.length > 0 && this.props.data.map((o, idx) => <DetailListItem\n                    key={'detail-list-item' + idx}\n                    active={this.props.active === idx}\n                    data={o}\n                    listItemClickHandler={() => this.props.onChange(idx)}\n                />)}\n                </ListGroup>                \n            </>\n        )}\n}\nexport default DetailList\n","import React, { Component } from 'react'\nimport { Progress, Row, Col, FormGroup, CustomInput} from 'reactstrap'\nimport '../App.css';\n\n\nexport default class DocumentsPanel extends Component {\n\n    state = { \n        antragChecked: false,\n        gradesChecked: false,\n        modulChecked: false,\n        progressValue: 0\n    } \n        \n    \n    getProgressValue = () => {\n            var value = 0;\n            if(this.state.antragChecked && this.state.gradesChecked && this.state.modulChecked){\n                return 100;\n            }\n            this.state.antragChecked ? value += 33.3 : value += 0;\n            this.state.gradesChecked ? value += 33.3 : value += 0;\n            this.state.modulChecked ? value += 33.3 : value += 0;\n    \n            return value;\n    };\n\n    toggleAntrag = () => {\n        this.setState({ antragChecked: !this.state.antragChecked })\n        console.log(\"toggle!\")\n    }\n\n    togglGrades = () => {\n        this.setState({ gradesChecked: !this.state.gradesChecked })\n        console.log(\"toggle!\")\n    }\n\n    toggleModul = () => {\n        this.setState({ modulChecked: !this.state.modulChecked })\n        console.log(\"toggle!\")\n    }\n    \n    \n    render = () => {\n    return ( \n        <div>\n            \n            <Row>\n                <Col>\n                    <FormGroup>\n                        <div className=\"documentChecks\">\n                            <CustomInput type=\"checkbox\" id=\"antragCheckbox\" onChange={this.toggleAntrag} label=\"Antrag auf Prüfungsanerkennung\" readOnly/>\n                            <CustomInput type=\"checkbox\" id=\"gradesCheckbox\" onChange={this.togglGrades} label=\"Notenspiegel\"  readOnly/>\n                            <CustomInput type=\"checkbox\" id=\"modulCheckbox\" onChange={this.toggleModul} label=\"Modulhandbuch\" readOnly/>\n                        </div>\n                    </FormGroup>\n                </Col>\n                <Col xs={6}>\n                    <Progress color=\"success\" value={this.getProgressValue()}>{(this.getProgressValue())}% Vollständig</Progress>\n                </Col>\n            </Row>\n        </div>\n    );\n    }\n}\n\n\n","import React, { Component } from 'react'\nimport { Progress, Row, Col, FormGroup, CustomInput} from 'reactstrap'\nimport '../App.css';\n\n\nexport default class CaseProofPanel extends Component {\n\n    state = { \n        internChecked: false,\n        germanyChecked: false,\n        moreChecked: false,\n        progressValue: 0\n    } \n        \n    \n    getProgressValue = () => {\n            var value = 0;\n            if(this.state.internChecked && this.state.germanyChecked && this.state.moreChecked){\n                return 100;\n            }\n            this.state.internChecked ? value += 33.3 : value += 0;\n            this.state.germanyChecked ? value += 33.3 : value += 0;\n            this.state.moreChecked ? value += 33.3 : value += 0;\n    \n            return value;\n    };\n\n    toggleIntern = () => {\n        this.setState({ internChecked: !this.state.internChecked })\n        console.log(\"toggle!\")\n    }\n\n    toggleGermany = () => {\n        this.setState({ germanyChecked: !this.state.germanyChecked })\n        console.log(\"toggle!\")\n    }\n\n    toggleMore = () => {\n        this.setState({ moreChecked: !this.state.moreChecked })\n        console.log(\"toggle!\")\n    }\n    \n    \n    render = () => {\n    return ( \n        <div>\n            \n            <Row xs={2}>\n                <Col xs={6}>\n                    <FormGroup>\n                        <div className=\"documentChecks\">\n                            <CustomInput type=\"checkbox\" defaultChecked={this.state.internChecked} onChange={this.toggleIntern} id=\"hochschulinternCheckbox\" label=\"Hochschulinterner Wechsel?\"/>\n                            <CustomInput type=\"checkbox\" defaultChecked={this.state.germanyChecked} onChange={this.toggleGermany} id=\"germanyCheckbox\" label=\"Institution in Deutschland?\" />\n                            <CustomInput type=\"checkbox\" defaultChecked={this.state.moreChecked} onChange={this.toggleMore} id=\"moreCheckbox\" label=\"weitere Überprüfung notwendig?\"/>\n                        </div>\n                    </FormGroup>\n                </Col>\n                <Col xs={6}>\n                    <Progress color=\"success\" value={this.getProgressValue()}>{(this.getProgressValue())}% Vollständig</Progress>\n                </Col >\n                <Col xs={3}>\n                    <a href=\"google.de\"><button>Anabin öffnen</button> </a>\n                </Col> \n            </Row>\n        </div>\n    );\n    }\n}\n\n\n","import React, {Component} from 'react' \nimport { ModalHeader, Modal, ModalBody, ModalFooter, Button, FormGroup, Label, Input } from 'reactstrap'\n\nconst electron = window.require('electron')\n\nexport default class AddCaseModuleModal extends Component {\n    constructor(props) {\n        super(props)\n        const DataBaseConnector = electron.remote.require('./database.connector.js')\n        this.module = DataBaseConnector('module')\n    }\n\n\n    state = {\n        detail: null,\n        modules: null\n    }\n\n    componentDidMount() {\n        this.getModules()\n    }\n\n    getModules = () => {\n        this.module.getAll(modules => this.setState({ modules }))\n    }\n\n    handleChange = (prop, value) => {\n        let tempForm = this.state.form\n        tempForm[prop] = value\n        this.setState({ form: tempForm })\n    }\n\n    handleSubmit = () => {\n        this.props.onSubmit(this.state.form)\n        this.props.toggle()\n        this.setState({ form: {} })\n    }\n\n    render = () => {\n        return  (\n            <>\n            <Modal isOpen={this.props.open} toggle={this.props.toggle}>\n                <ModalHeader toggle={this.props.toggle}>Modulauswahl</ModalHeader>\n                <ModalBody>\n                    <FormGroup>\n                        <Label for=\"selectModule\"></Label>\n                        <Input type=\"select\" name=\"selectMulti\" id=\"selectModule\" multiple>\n                        {this.state.modules && this.state.modules.length > 0 && this.state.modules.map(c => \n                        <option key={'modules-option-' + c.moduleID} value={c.moduleID}>{c.moduleName}</option>)}\n                        </Input>\n                    </FormGroup>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.handleSubmit}>Speichern</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.props.toggle}>Abbrechen</Button>\n                </ModalFooter>\n            </Modal>\n            </>\n      )\n    }\n}","import React, { Component } from 'react'\nimport { Row, Col, Table, Button} from 'reactstrap'\nimport AddCaseModuleModal from './add.casemodule.modal';\n\n\nexport default class CaseModulePanel extends Component {\n\n    state = { \n        internChecked: false,\n        germanyChecked: false,\n        moreChecked: false,\n        progressValue: 0,\n        modules: null,\n        moduleModalOpen: false\n    } \n\n    addModulesToTable = modules => {\n\n    }\n    \n    \n    render = () => {\n    return ( \n        <div>\n            \n            <Row xs={2}>\n                <Col xs={9}>\n                <Table size=\"sm\" hover>\n                    <thead>\n                        <tr>\n                        <th>#</th>\n                        <th>Modulname</th>\n                        <th>Name des Fachkollegen</th>\n                        <th>Rückmeldung erhalten</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {/* {this.state.modules && this.state.modules.length > 0 && this.state.modules.map(m => {\n                            <tr>\n                                <th scope=\"row\">1</th>\n                                <td>{m.name}</td>\n                                <td>Otto</td>\n                                <td>@mdo</td>\n                            </tr>\n                        })} */}\n                        <tr>\n                        <th scope=\"row\">2</th>\n                        <td>Jacob</td>\n                        <td>Thornton</td>\n                        <td>@fat</td>\n                        </tr>\n                        <tr>\n                        <th scope=\"row\">3</th>\n                        <td>Larry</td>\n                        <td>the Bird</td>\n                        <td>@twitter</td>\n                        </tr>\n                    </tbody>\n                </Table>\n                </Col>\n                \n                <Col xs={3}>\n                    <Button color=\"primary\" onClick={() => this.setState({ moduleModalOpen: !this.state.moduleModalOpen })}>Module auswählen</Button>\n                </Col> \n            </Row>\n\n            <AddCaseModuleModal className=\"app-case-module\"\n                open={this.state.moduleModalOpen}\n                size={300}\n                toggle={() => this.setState({ moduleModalOpen: !this.state.moduleModalOpen })}\n                onSubmit={() => this.addModulesToTable}\n            />\n        </div>\n    );\n    }\n}\n\n\n","import React, {Component} from 'react'\r\nimport { Input } from 'reactstrap'\r\n\r\nconst electron = window.require('electron')\r\n\r\nclass CoursesInput extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        const DataBaseConnector = electron.remote.require('./database.connector.js')\r\n        this.course = DataBaseConnector('course')\r\n    }\r\n\r\n    state= {\r\n        courses: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCourses()\r\n    }\r\n\r\n    getCourses = () => {\r\n        this.course.getAll(courses => this.setState({ courses }))\r\n    }\r\n\r\n    render () {\r\n        return (\r\n           <Input type={'select'} value={this.props.value} placeholder='Studiengang wählen...' onChange={e => this.props.onChange(e.target.value)}>\r\n               {this.state.courses && this.state.courses.length > 0 && this.state.courses.map(c => <option key={'courses-option-' + c.courseID} value={c.courseID}>{c.courseName}</option>)}\r\n           </Input>  \r\n        )}\r\n}\r\nexport default CoursesInput\r\n","import React, {Component} from 'react'\nimport { Form, FormGroup, Row, Col, Label, Input } from 'reactstrap'\nimport DocumentDetail from './document.panel';\nimport CaseProofPanel from './case.proof.panel';\nimport CaseModulePanel from './case.module.panel';\nimport CoursesInput from '../Components/inputField.courses'\n\nexport default class DetailContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            moduleModalOpen: false,\n            form: {\n                caseFirstName: '', \n                caseLastName: '', \n                mNumber: '', \n                courseID: '' ,\n                documentID: '',\n                caseID: '',\n                email: '', \n                geschlecht: ''\n            } \n        }\n    }\n    \n    \n    \n    handleChange = (prop, e) => {\n        console.log('a')\n        let tempForm = this.props.data\n        tempForm[prop] = e.target.value\n        this.props.onChange(tempForm, prop, this.props.detail)\n        this.setState({ tempForm })\n        \n    }\n\n    handleSubmit = () => {\n        this.props.onSubmit(this.state.form)\n        this.props.toggle()\n        this.setState({ form: {} })\n    }\n\n    render = () => {\n    return this.props.data\n    ? \n    <>\n    <h3>{(this.props.data.caseFirstName ? this.props.data.caseFirstName : '') + ' ' + (this.props.data.caseLastName ? this.props.data.caseLastName : '')}</h3>\n    <Form>\n    <FormGroup>\n        <Row xs={2} style={{ padding: 16 }}>\n            <Col>\n                <Label for=\"caseFirstName\">Vorname</Label>\n                <Input type='text' value={this.props.data.caseFirstName ? this.props.data.caseFirstName : ''} \n                onChange={value => this.props.onChange(this.props.data.caseID, 'caseFirstName', value)} />\n            </Col>\n            <Col>\n                <Label for=\"caseLastName\">Nachname</Label>\n                <Input type='text' value={this.props.data.caseLastName ? this.props.data.caseLastName : ''} \n                onChange={value => this.props.onChange(this.props.data.caseID, 'caseLastName', value)} />\n            </Col>\n            <Col> \n                <Label for=\"mNumber\">Matrikelnummer</Label>\n                <Input type='text' value={this.props.data.mNumber ? this.props.data.mNumber : ''} \n                onChange={value => this.props.onChange(this.props.data.caseID, 'mNumber', value)} />\n            </Col>\n            <Col> \n                <Label for=\"email\">E-Mail-Adresse</Label>\n                <Input type='text' value={this.props.data.email ? this.props.data.email : ''} \n                onChange={value => this.props.onChange(this.props.data.caseID, 'email', value)} />\n            </Col>\n            <Col> \n                <Label for=\"geschlecht\">Geschlecht</Label>\n                <Input type='text' value={this.props.data.geschlecht ? this.props.data.geschlecht : ''} \n                onChange={value => this.props.onChange(this.props.data.caseID, 'email', value)} />\n            </Col>\n            <Col>\n            <Label for=\"courseID\">Studiengang</Label>\n                <CoursesInput value={this.props.data.courseID ? this.props.data.courseID : ''} \n                onChange={ value => this.props.onChange(this.props.data.caseID, 'courseID', value)} />\n            </Col>\n        </Row>\n    </FormGroup>\n\n    <hr />\n    <h4>Prüfung der Institution</h4>\n    <Row style={{ padding: 16 }}>\n        <Col xs={12}>\n            <CaseProofPanel />\n        </Col>\n    </Row>\n\n    <hr />\n    <h4>Dokumente</h4>\n    <Row style={{ padding: 16 }}>\n        <Col xs={12}>\n            <DocumentDetail />\n        </Col>\n    </Row>\n\n    <hr />\n    <h4>Module</h4>\n    <Row style={{ padding: 16 }}>\n        <Col xs={12}>\n            <CaseModulePanel onSubmit={() => this.setState({ moduleModalOpen: true })}/>\n        </Col>\n    </Row>\n    </Form>\n           \n    </> \n    : <></>    \n}\n}","import React, { Component } from 'react'\nimport { Form, FormGroup, Label, Input, Row, Col } from 'reactstrap'\nimport CoursesInput from '../Components/inputField.courses'\n\n\nexport default class AddWindow extends Component {\n\n    render = () => {\n        return <Form>\n            <FormGroup>\n                <Row xs={2} style={{ padding: 16 }}>\n                <Col>\n                    <Label for=\"caseFirstName\">Vorname</Label>\n                    <Input id=\"caseFirstName\" type='text' value={this.props.data && this.props.data.caseFirstName} onChange={e => this.props.onChange('caseFirstName', e.target.value)} placeholder=\"Vorname eintragen\" />\n                </Col>\n                <Col>\n                    <Label for=\"caseLastName\">Nachname</Label>\n                    <Input id=\"caseLastName\" type='text' value={this.props.data && this.props.data.caseLastName} onChange={e => this.props.onChange('caseLastName', e.target.value)} placeholder=\"Nachname eintragen\" />\n                </Col>\n                <Col> \n                    <Label for=\"mNumber\">Matrikelnummer</Label>\n                    <Input id=\"mNumber\" type='text' value={this.props.data && this.props.data.mNumber}  onChange={e => this.props.onChange('mNumber', e.target.value)} placeholder=\"Matrikelnummer eintragen\" />\n                </Col>\n                <Col>\n                    <Label for=\"courseID\">Studiengang</Label>\n                    <CoursesInput id=\"courseID\" value={this.props.data.courseID} onChange={ value => this.props.onChange('courseID', value)} />\n                </Col>\n                </Row>\n            </FormGroup>\n        </Form>\n    }\n}","import React, {Component} from 'react' \nimport AddWindow from '../Container/addWindow'\nimport { ModalHeader, Modal, ModalBody, ModalFooter, Button } from 'reactstrap'\n\nexport default class AddStudentModal extends Component {\n    state = {\n        form: {\n            caseFirstName: '', \n            caseLastName: '', \n            mNumber: '', \n            courseID: '' \n        } \n    }\n\n    handleChange = (prop, value) => {\n        console.log('prop', prop)\n        console.log('value', value)\n        let tempForm = this.state.form\n        tempForm[prop] = value\n        this.setState({ form: tempForm })\n    }\n\n    handleSubmit = () => {\n        let data = this.state.form\n        data.createDateCase= new Date()\n        data.state = 'angelegt'\n        this.props.onSubmit(data)\n        this.props.toggle()\n        this.setState({ form: {} })\n    }\n\n    render = () => {\n        return  (\n            <Modal isOpen={this.props.open} toggle={this.props.toggle}>\n                <ModalHeader toggle={this.props.toggle}>Student Eintragen</ModalHeader>\n                <ModalBody>\n                    <AddWindow onChange={this.handleChange} data={this.state.form} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.handleSubmit}>Speichern</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.props.toggle}>Abbrechen</Button>\n                </ModalFooter>\n            </Modal>\n      )\n    }\n}","import React, { Component } from 'react'\nimport DetailList from '../Components/detail.list'\nimport DetailContent from '../Components/detail.content'\nimport AddStudentModal from '../Components/add.student.modal'\nimport { Row, Col } from 'reactstrap'\n/* import moment from 'moment'\n */\nconst electron = window.require('electron')\n\n\nexport default class MainView extends Component {\n    constructor(props) {\n        super(props)\n        const DataBaseConnector = electron.remote.require('./database.connector.js')\n        const DatabaseCase = electron.remote.require('./casedb.js')\n        this.course = DataBaseConnector('course')\n        this.casesDB = DataBaseConnector('cases')\n        this.caseDB = DatabaseCase()\n    }\n\n\n    state = {\n        detail: null,\n        courses: null, \n        cases: null,\n        tests: null,\n        addModalOpen: false\n    }\n\n    componentDidMount() {\n        this.getCases()\n        this.getCourses()\n    }\n\n    getCourses = () => {\n        this.course.getAll(courses => this.setState({ courses }))\n    }\n\n    getCases = () => {\n        this.casesDB.getAll(cases => this.setState({ cases }))\n    }\n\n    addCase = student => {\n        this.casesDB.data(student).create(() => {\n                            this.getCases()\n                            console.log(' cases added')\n                        })\n    }\n\n    editData = (caseID, prop, value) => {\n        console.log(caseID, prop, value)\n            this.caseDB.updateCase(caseID, prop, value, (changes) => {\n              this.getCases()\n            })\n    }\n           \n    render = () => {\n        return <>    \n            <Row className='app-header'>\n                <Col><h3>Fallübersicht</h3></Col>\n{/*                 \n\n{moment(this.state.data.createDate).isBefore(moment().subtract(2, 'weeks'))}\n */} \n            </Row>\n            <Row className='app-body'>\n                <Col xs={3} className='app-list' style={{ minHeight: '90vh' }}>\n                    <DetailList\n                        onAdd={() => this.setState({ addModalOpen: true })}\n                        onChange={value => this.setState({ detail: value })}\n                        active={this.state.detail}\n                        data={this.state.cases}\n                    />\n                </Col>\n                <Col xs={9} className='app-content'>\n                    <DetailContent\n                        detail={this.state.detail}\n                        data={this.state.cases != null && this.state.detail != null ? this.state.cases[this.state.detail] : null}\n                        onChange={this.editData}\n                    />\n                </Col>\n            </Row>\n            <AddStudentModal className=\"app-modal-add\"\n                open={this.state.addModalOpen}\n                toggle={() => this.setState({ addModalOpen: !this.state.addModalOpen })}\n                onSubmit={this.addCase}\n            />\n            \n        </>\n    }\n}\n","import React from 'react'\nimport { ListGroupItem } from 'reactstrap'\n\n    const ModuleListItem = ({ data, listItemClickHandler, active }) => (\n        <ListGroupItem active={active} tag=\"button\" action onClick={() => listItemClickHandler()}>\n            <span><b>{(data.moduleName ? data.moduleName : '')}</b></span>\n        </ListGroupItem>\n    )\n\n    export default ModuleListItem","import React, {Component} from 'react'\nimport { Row, Col, Button, FormGroup, Input } from 'reactstrap';\n\nclass ModuleListHeader extends Component {\n\n    render () {\n        return <>\n        <Row>\n        </Row>\n        <Row>\n            <Col xs={10}>\n                <FormGroup>\n                    <Input\n                    type=\"search\"\n                    name=\"search\"\n                    id=\"exampleSearch\"\n                    placeholder=\"search placeholder\"\n                    />\n                </FormGroup>\n            </Col>\n            <Col className='no-padding' xs={2}><Button color=\"success\" onClick={this.props.onAdd}>+</Button></Col>\n        </Row>\n        </> \n    }\n}\nexport default ModuleListHeader\n","import React, {Component} from 'react'\nimport ModuleListItem from './module.list.item'\nimport { ListGroup } from 'reactstrap';\nimport ModuleListHeader from './module.list.header';\n\nclass ModuleList extends Component {\n\n    render () {\n        return (\n            <>\n                <ModuleListHeader onAdd={this.props.onAdd} />\n                <ListGroup>\n                {this.props.data && this.props.data.length > 0 && this.props.data.map((o, idx) => <ModuleListItem\n                    key={'module-list-item' + idx}\n                    active={this.props.active === idx}\n                    data={o}\n                    listItemClickHandler={() => this.props.onChange(idx)}\n                />)}\n                </ListGroup>                \n            </>\n        )}\n}\nexport default ModuleList\n","import React, {Component} from 'react'\nimport { Form, FormGroup, Row, Col, Label, Input, CustomInput, InputGroup } from 'reactstrap'\n\nexport default class ModuleContent extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { \n            documentsModalOpen: false,\n            form: {\n                moduleName: '', \n                profName: '', \n                creditpoints: '', \n                courseID: '' ,\n                profEmail: ''\n            } \n        }\n    }\n    \n    handleChange = (prop, e) => {\n        let tempForm = this.props.data\n        tempForm[prop] = e.target.value\n        this.props.onChange(tempForm, this.props.detail)\n        this.setState({ tempForm })\n        \n    }\n\n    handleSubmit = () => {\n        this.props.onSubmit(this.state.form)\n        this.props.toggle()\n        this.setState({ form: {} })\n    }\n\n    render = () => {\n    return this.props.data\n    ? \n    <>\n    <h3>{(this.props.data.moduleName ? this.props.data.moduleName : '')}</h3>\n    <Form>\n        <FormGroup>\n                <Row xs={2} style={{ padding: 16 }}>\n                    <Col>\n                        <Label for=\"moduleName\">Modulname</Label>\n                        <Input value={this.props.data.moduleName ? this.props.data.moduleName : ''} \n                        onChange={e => this.props.onChange('moduleName', e.target.value)} \n                        type=\"text\" placeholder=\"Modulname eintragen\" />\n                    </Col>\n                    <Col>\n                        <Label for=\"creditpoints\">Credit Points</Label>\n                        <Input value={this.props.data.creditpoints ? this.props.data.creditpoints : ''} \n                        onChange={e => this.props.onChange('creditPoints', e.target.value)} \n                        type=\"text\" placeholder=\"Credit Points eintragen\" />\n                    </Col>\n                    <Col>\n                        <Label for=\"profName\">Lehrender</Label>\n                        <Input value={this.props.data.profName ? this.props.data.profName : ''} \n                        onChange={e => this.props.onChange('profName', e.target.value)} \n                        type=\"text\" placeholder=\"Name des Lehrenden eintragen\" />\n                    </Col>\n                    <Col>\n                        <Label for=\"profEmail\">E-Mail-Adresse</Label>\n                        <Input value={this.props.data.profEmail ? this.props.data.profEmail : ''} \n                        onChange={e => this.props.onChange('profEmail', e.target.value)} \n                        type=\"text\" placeholder=\"E-Mail-Adresse eintragen\" />\n                    </Col>\n                    <Col xs={4}>\n                        <Label for=\"courseID\">Studiengang</Label>\n                        <InputGroup>\n                            <CustomInput type=\"checkbox\"  id=\"praktische\" label=\"Praktische Informatik\" />\n                            <CustomInput type=\"checkbox\"  id=\"wirtschaft\" label=\"Wirtschaftsinformatik\"/>\n                            <CustomInput type=\"checkbox\"  id=\"theoretische\" label=\"Theoretische Informatik\"/>\n                        </InputGroup>\n                    </Col>\n                </Row>\n        </FormGroup>\n        \n</Form>\n    \n    </> \n    : <></>    \n}\n}","import React, { Component } from 'react'\nimport { Form, FormGroup, Label, Input, Row, Col, CustomInput } from 'reactstrap'\n\nexport default class AddModuleWindow extends Component {\n\n    render = () => {\n        return <Form>\n            <FormGroup>\n                <Row xs={2} style={{ padding: 16 }}>\n                    <Col>\n                        <Label for=\"moduleName\">Modulname</Label>\n                        <Input value={this.props.data && this.props.data.name} \n                        onChange={e => this.props.onChange('moduleName', e.target.value)} \n                        type=\"text\" name=\"moduleName\" id=\"moduleName\" \n                        placeholder=\"Modulname eintragen\" />\n                    </Col>\n                    <Col>\n                        <Label for=\"creditPoints\">Credit Points</Label>\n                        <Input value={this.props.data && this.props.data.creditPoints} \n                        onChange={e => this.props.onChange('creditPoints', e.target.value)} \n                        type=\"text\" name=\"creditPoints\" id=\"creditPoints\" \n                        placeholder=\"Credit Points eintragen\" />\n                    </Col>\n                    <Col>\n                        <Label for=\"profName\">Lehrender</Label>\n                        <Input value={this.props.data && this.props.data.profName} \n                        onChange={e => this.props.onChange('profName', e.target.value)} \n                        type=\"text\" name=\"profName\" id=\"profName\" \n                        placeholder=\"Name des Lehrenden eintragen\" />\n                    </Col>\n                    <Col>\n                        <Label for=\"profEmail\">E-Mail-Adresse</Label>\n                        <Input value={this.props.data && this.props.data.profEmail} \n                        onChange={e => this.props.onChange('profEmail', e.target.value)} \n                        type=\"text\" name=\"profEmail\" id=\"profEmail\" \n                        placeholder=\"E-Mail-Adresse eintragen\" />\n                    </Col>\n                    <Col>\n                        <Label for=\"courseID\">Studiengang</Label>\n                        <CustomInput type=\"checkbox\"  id=\"praktische1\" label=\"Praktische Informatik\" />\n                        <CustomInput type=\"checkbox\"  id=\"wirtschaft1\" label=\"Wirtschaftsinformatik\"/>\n                        <CustomInput type=\"checkbox\"  id=\"theoretische1\" label=\"Theoretische Informatik\"/>\n                    </Col>\n                </Row>\n            </FormGroup>\n        </Form>\n    }\n}","import React, {Component} from 'react' \nimport { ModalHeader, Modal, ModalBody, ModalFooter, Button } from 'reactstrap'\nimport AddModuleWindow from '../Container/addModuleWindow'\n\nexport default class AddModuleModal extends Component {\n    state = {\n        form: {\n            moduleName: '',\n            creditPoints: '',\n            profName: '', \n            profEmail: ''           \n        } \n    }\n\n    handleChange = (prop, value) => {\n        let tempForm = this.state.form\n        tempForm[prop] = value\n        this.setState({ form: tempForm })\n    }\n\n    handleSubmit = () => {\n        let data = this.state.form\n        this.props.onSubmit(data)\n        this.props.toggle()\n        this.setState({ form: {} })\n    }\n\n    render = () => {\n        return  (\n            <Modal isOpen={this.props.open} toggle={this.props.toggle}>\n                <ModalHeader toggle={this.props.toggle}>Modul hinzufügen</ModalHeader>\n                <ModalBody>\n                    <AddModuleWindow onChange={this.handleChange} data={this.state.form} />\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"primary\" onClick={this.handleSubmit}>Speichern</Button>{' '}\n                    <Button color=\"secondary\" onClick={this.props.toggle}>Abbrechen</Button>\n                </ModalFooter>\n            </Modal>\n      )\n    }\n}","import React, {Component} from 'react'\nimport { Row, Col } from 'reactstrap'\nimport ModuleList from '../Components/module.list'\nimport ModuleContent from '../Components/module.content'\nimport AddModuleModal from '../Components/add.module.modal'\n\nconst electron = window.require('electron')\n\nexport default class MainView extends Component {\n        constructor(props) {\n        super(props)\n        const DataBaseConnector = electron.remote.require('./database.connector.js')\n        this.module = DataBaseConnector('module')\n      }\n      state = {\n        modules: null\n      }  \n  \n      componentDidMount() {\n          this.getModules()\n          \n      }\n  \n      getModules = () => {\n          this.module.getAll(modules => this.setState({ modules }))\n      }\n\n    addModule = newModule => {\n      this.module.data(newModule).create(() => {\n        this.getModules()\n        console.log(' module added')\n    })\n    }\n\n    editData = (newModule, i) => {\n        this.setState(state => {\n          const data = state.data.map((item, j) => {\n            if (j === i) {\n              return newModule;\n            } else {\n              return item;\n            }\n          });\n     \n          return {\n            data,\n          };\n        });\n      };\n\n    render () {\n        return (\n            <>\n                <Row className='app-header'>\n                    <Col><h3>Modulübersicht</h3></Col>\n                </Row>\n                <Row className='app-body'>\n                <Col xs={3} className='app-list'>\n                    <ModuleList \n                        onAdd={() => this.setState({ addModalOpen: true })}\n                        onChange={value => this.setState({ detail: value })}\n                        active={this.state.detail}\n                        data={this.state.modules}\n                    />\n                </Col>\n                <Col xs={9} className='app-content'>\n                    <ModuleContent \n                    detail={this.state.detail} \n                    data={this.state.modules != null && this.state.detail != null ? this.state.modules[this.state.detail] : null}\n                    onChange={this.editData}\n                    />\n                </Col>\n            </Row>\n            <AddModuleModal className=\"app-modal-add\"\n                open={this.state.addModalOpen}\n                toggle={() => this.setState({ addModalOpen: !this.state.addModalOpen })}\n                onSubmit={this.addModule}\n            />\n                   \n            </>\n        )}\n}\n\n","import React, { Component } from 'react';\nimport Navigation from './Components/globals/navigation.js'\nimport './App.css';\nimport MainView from './Container/main.view';\nimport ModuleOverview from './Container/module.overview.js';\nimport './styles/main.css'\nimport { Container } from 'reactstrap';\n\nclass App extends Component {\n  state = {\n    current: 0\n  }\n  \n  getPage() {\n    switch (this.state.current) {\n      case 0: return <MainView />\n      case 1: return <ModuleOverview />  \n      default: return <MainView />;\n    }\n\n    \n  }\n            /**<Row className=\"app-footer\">\n                <Col><p>Meike Cieslak</p></Col>\n            </Row>*/\n\n  render () {\n        return (\n      \n          <Container fluid>\n            <Navigation changeSite={(value) => this.setState({current: value})}/>\n            {this.getPage()}\n          </Container>\n      );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n "],"sourceRoot":""}